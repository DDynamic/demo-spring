on: push

permissions:
  id-token: write
  contents: write 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'gradle'
      - name: Build JAR file
        run: ./gradlew build
      - name: Unit test
        run: ./gradlew test
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::294829766095:role/github-role
      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: demospring
          IMAGE_TAG: ${{ github.ref_name }}-${{ github.sha }}
        run: |
          docker build --build-arg JAR_FILE=build/libs/\*.jar -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == 'main'

    defaults:
      run:
        working-directory: ./infrastructure

    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::294829766095:role/github-role
      - uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init
      - name: Terraform apply
        env:
          TF_VAR_image_tag: ${{ github.ref_name }}-${{ github.sha }}
        run: terraform apply -auto-approve